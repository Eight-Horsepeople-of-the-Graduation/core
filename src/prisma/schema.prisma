generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  username          String             @unique
  email             String             @unique
  password          String
  country           String
  gender            Gender
  birthDate         DateTime?
  joinDate          DateTime           @default(now())
  profilePicture    String?
  isAdmin           Boolean            @default(false)
  books             Book[]
  bookshelves       Bookshelf[]
  favoriteGenres    Genre[]
  readingChallenges ReadingChallenge[]
  reviews           Review[]
}

model Book {
  id                Int                @id @default(autoincrement())
  title             String
  isbn              String             @unique
  description       String
  publishDate       DateTime
  format            Format
  language          String
  country           String
  numOfPages        Int
  authors           Author[]
  bookshelves       Bookshelf[]
  genres            Genre[]
  owners            User[]
  readingChallenges ReadingChallenge[]
  reviews           Review[]
}

model Bookshelf {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  privacy     Privacy
  books       Book[]
  user        User     @relation(fields: [userId], references: [id])
  userId      Int

  @@unique([userId, title])
}

model Review {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  rating      Float
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  book        Book     @relation(fields: [bookId], references: [id])
  bookId      Int

  @@unique([userId, bookId])
}

model ReadingChallenge {
  id        Int      @id @default(autoincrement())
  title     String
  type      Type
  startDate DateTime @default(now())
  progress  Int
  books     Book[]
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Genre {
  id          Int    @id @default(autoincrement())
  title       String @unique
  description String
  books       Book[]
  users       User[]
}

model Author {
  id    Int    @id @default(autoincrement())
  name  String
  books Book[]
}

enum Format {
  PAPERBACK
  HARDCOVER
  EBOOK
}

enum Gender {
  MALE
  FEMALE
}

enum Type {
  WEEKLY
  MONTHLY
  ANNUAL
}

enum Privacy {
  PUBLIC
  PRIVATE
}
